# This configuration file sets up the NGINX server for serving the DirectCareAI project.
# It defines basic settings such as worker processes, event handling, logging,
# and specific proxying rules for serving both static files and API requests.

worker_processes 1; # Defines the number of worker processes to handle requests. We use one worker for this setup.

events {
    worker_connections 1024; # Defines the maximum number of simultaneous connections a worker can handle.
}

http {
    include mime.types; # Includes mime types for file extensions, helping NGINX determine how to serve different files.
    default_type application/octet-stream; # Sets the default MIME type to binary for unknown file types.

    # Defines the log format for access logs.
    # It captures remote address, user, time, request details, response status, byte count, referrer, user-agent, and forwarded IP.
    log_format main '$remote_addr - $remote_user [$time_local] "$request" ' '$status $body_bytes_sent "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for"';

    # Specifies the paths for access and error logs.
    # Access logs will record incoming client requests.
    access_log C:/Users/Randy_Batista/Desktop/Projects/DirectCareAI/nginx/logs/access.log main;
    # Error logs will capture any issues encountered by the server.
    error_log C:/Users/Randy_Batista/Desktop/Projects/DirectCareAI/nginx/logs/error.log warn;

    # Map to determine the API endpoint based on the protocol (HTTP or HTTPS).
    # This is useful when the server is behind a load balancer or reverse proxy handling HTTPS.
    map $http_x_forwarded_proto $proxy_api_endpoint {
        default "http://localhost:8000/api"; # Default API endpoint for HTTP.
        "https" "http://localhost:8000/api"; # API endpoint when HTTPS is used.
    }

    # Map to determine the development endpoint based on the protocol (HTTP or HTTPS).
    # This maps HTTP requests to the development server and HTTPS to the same endpoint.
    map $http_x_forwarded_proto $proxy_dev_endpoint {
        default "http://localhost:3000 "; # Default development endpoint for HTTP.
        "https" "http://localhost:3000 "; # Development endpoint when HTTPS is used.
    }

    # Main server block
    server {
        listen 80; # Listens on port 80 for HTTP traffic.
        server_name DirectCareDB; # Defines the server name for this configuration.

        # Specifies the root directory for static content (e.g., React build files).
        root C:/Users/Randy_Batista/Desktop/Projects/DirectCareAI/client/build;
        index.html; # Default file to serve when the root is requested.

        # Location block for serving the main site (static files like HTML, CSS, JS).
        location / {
            try_files $uri $uri/ /index.html; # If the requested file is not found, serve index.html.

            # These proxy_set_header directives ensure proper handling of WebSockets and client info.
            proxy_set_header Upgrade $http_upgrade; # Handles WebSocket connections.
            proxy_set_header Connection 'upgrade'; # Required for WebSockets.
            proxy_set_header Host $host; # Passes the Host header to the backend.
            proxy_set_header X-Real-IP $remote_addr; # Passes the real client IP to the backend.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Adds the client's IP to the X-Forwarded-For header.
            proxy_http_version 1.1; # Ensures HTTP/1.1 is used for proxying.
            proxy_cache_bypass $http_upgrade; # Ensures no caching for WebSocket connections.
        }

        # Location block for handling API requests.
        # Routes API requests to the backend service.
        location /api {
            proxy_pass $proxy_api_endpoint ; # Passes API requests to the backend API endpoint.

            # Proxy settings for API requests to handle WebSocket upgrades and forwarding headers.
            proxy_set_header Upgrade $http_upgrade; # Handles WebSocket connections.
            proxy_set_header Connection 'upgrade'; # Required for WebSockets.
            proxy_set_header Host $host; # Passes the Host header to the backend.
            proxy_set_header X-Real-IP $remote_addr; # Passes the real client IP to the backend.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Adds the client's IP to the X-Forwarded-For header.
            proxy_http_version 1.1; # Ensures HTTP/1.1 is used for proxying.
            proxy_cache_bypass $http_upgrade; # Ensures no caching for WebSocket connections.
        }

        # Redirect HTTP requests to the development server if the protocol is HTTP.
        # This is used for redirecting requests during development to the local dev server.
        if ( $http_x_forwarded_proto = "http") {
            return 302 $proxy_dev_endpoint$request_uri; # Redirects to the dev endpoint with the original request URI.
        }

        # Custom error page for 5xx errors.
        error_page 500 502 503 504 /50x.html; # Defines a custom page for 5xx errors.
        location = /50x.html {
            root html; # The 50x.html page is located in the default HTML directory.
        }
    }
}
